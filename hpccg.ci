mainmodule charmHpccg {
  extern module completion;
  readonly int numChares;
  readonly CProxy_charmMain mainProxy;
  readonly CProxy_CompletionDetector detector;

  mainchare charmMain {
    entry charmMain(CkArgMsg*);
    entry [reductiontarget] void matrixReady();
    entry [reductiontarget] void foundExternals();

    entry void start() {
      when matrixReady() atomic {
        detector.ckLocalBranch()
          ->start_detection(numChares,
                            CkCallback(CkIndex_charmHpccg::findExternals(), array),
                            CkCallback(CkReductionTarget(charmMain, foundExternals), thisProxy),
                            0);
      }

      when foundExternals() atomic {
        CkPrintf("start findExternals()\n");
        CkExit();
      }
    };
  };
  
  array [1D] charmHpccg {
    entry charmHpccg();
    entry void generateMatrix(int nx, int ny, int nz);
    entry void readMatrix(std::string fileName);
    entry void findExternals();
    entry void needXElements(int idx, std::vector<int> rows);
  };
};
